name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install GCC 14 and ccache
        run: sudo apt-get update && sudo apt-get install -y gcc-14 g++-14 ccache

      - name: Make GCC the default
        run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 60 --slave /usr/bin/g++ g++ /usr/bin/g++-14

      - name: Cache JDK
        id: cache_jdk
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/test/jdk23
          key: jdk-23-${{ runner.os }}

      - name: Download JDK23
        if: steps.cache_jdk.outputs.cache-hit != 'true'
        run: |
          curl -o ${{ github.workspace }}/jdk-23_linux-x64_bin.tar.gz \
            https://download.oracle.com/java/23/latest/jdk-23_linux-x64_bin.tar.gz

      - name: Unzip JDK23
        if: steps.cache_jdk.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ github.workspace }}/test
          tar -xzf ${{ github.workspace }}/jdk-23_linux-x64_bin.tar.gz -C ${{ github.workspace }}/test
          mv ${{ github.workspace }}/test/jdk-23.* ${{ github.workspace }}/test/jdk23

      - name: Cache ccache
        id: cache_ccache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('**/*.c','**/*.cpp','**/*.h','**/*.hpp','**/CMakeLists.txt') }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Configure ccache
        run: |
          ccache -M 2G
          ccache -s

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build \
                -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
                -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
